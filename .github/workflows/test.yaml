name: test
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        run: npm ci 

      - name: Check formatting
        run: npm run format-check

      - name: Check linter
        run: npm run lint

      - name: Run tests
        run: npm test

  server:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    services:
      postgres:
        image: postgres:14.4
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Load env from reading .tool-versions
        id: versions
        run: |
          elixir=$(grep 'elixir' .tool-versions | cut -d ' ' -f 2)
          erlang=$(grep 'erlang' .tool-versions | cut -d ' ' -f 2)
          echo "elixir=$elixir" >> $GITHUB_OUTPUT
          echo "otp=$erlang" >> $GITHUB_OUTPUT

      - name: Setup Erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ steps.versions.outputs.otp }}
          elixir-version: ${{ steps.versions.outputs.elixir }}

      - name: Cache mix
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ steps.versions.outputs.elixir }}-${{ steps.versions.outputs.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ steps.versions.outputs.elixir }}-${{ steps.versions.outputs.otp }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Check formatting
        run: mix format --check-formatted

      - name: Check warnings
        run: mix compile --warnings-as-errors

      - name: Run tests
        run: mix test
